# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET         /                              controllers.BookStore.index()
GET         /introduction                  controllers.Introduction.introduction()
GET			/setting					   controllers.BookStore.setting()
POST		/setting                       controllers.BookStore.settingRegister()
GET         /description/:id                    controllers.BookStore.description(id: String)
#POST        /sign-up                              controllers.Introduction.signUp()
#GET     /lists                      controllers.Application.bookList()
#GET     /order                      controllers.Application.buy(bookName,bookPrice: Float)
GET     /addbook                           controllers.BookStore.addBook()
POST    /addbook                           controllers.BookStore.handleAddBook()
GET     /listbook                          controllers.BookStore.listBook()
GET     /updatebook/:id                  controllers.BookStore.updateBook(id: String)
POST    /updatebook                        controllers.BookStore.handleUpdateBook()
GET     /deleteBook                        controllers.BookStore.deleteBook(id: String)
GET     /loadAddresses					   controllers.BookStore.loadAddresses()
POST 	/addAddress			                controllers.BookStore.addAddress()
POST 	/editAddress						controllers.BookStore.editAddress()
POST    /removeAddress                      controllers.BookStore.removeAddress()
POST    /addReview                          controllers.BookStore.addReview()
POST     /loadComments                       controllers.BookStore.loadComments()

# Login page
GET         /login                         securesocial.controllers.LoginPage.login
GET         /logout                        securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                        securesocial.controllers.Registration.startSignUp
POST        /signup                        securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                 securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                 securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                         securesocial.controllers.Registration.startResetPassword
POST        /reset                         securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                  securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                  securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                      securesocial.controllers.PasswordChange.page
POST        /password                      securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider        securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider        securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                securesocial.controllers.ProviderController.notAuthorized

# AngularJS 
GET			/loadProducts/:count		   controllers.BookStore.loadProducts(count: Int)
GET         /searchProducts                controllers.BookStore.searchProducts(name: String ?= "")
GET         /getImage/:name                controllers.BookStore.getImage(name: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                  controllers.Assets.at(path="/public", file)

# Webjar for Bootstrap
GET         /webjars/*file                 controllers.WebJarAssets.at(file)
