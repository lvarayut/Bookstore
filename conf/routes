# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET         /                              controllers.BookStore.index()
GET         /introduction                  controllers.Introduction.introduction()
#POST        /sign-up                              controllers.Introduction.signUp()
#GET     /lists                      controllers.Application.bookList()
#GET     /order                      controllers.Application.buy(bookName,bookPrice: Float)

# Login page
GET         /login                         securesocial.controllers.LoginPage.login
GET         /logout                        securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                        securesocial.controllers.Registration.startSignUp
POST        /signup                        securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                 securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                 securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                         securesocial.controllers.Registration.startResetPassword
POST        /reset                         securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                  securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                  securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                      securesocial.controllers.PasswordChange.page
POST        /password                      securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider        securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider        securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                securesocial.controllers.ProviderController.notAuthorized

# AngularJS 
GET			/loadProducts/:count		   controllers.BookStore.loadProducts(count: Int)
GET         /searchProducts/:name          controllers.BookStore.searchProducts(name: String)
GET         /getImage/:name                controllers.BookStore.getImage(name: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                  controllers.Assets.at(path="/public", file)

# Webjar for Bootstrap
GET         /webjars/*file                 controllers.WebJarAssets.at(file)
